ARM GAS  /tmp/cc9duLFA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB133:
  28              		.file 1 "Src/STM32F4xx/stm32f4xx_it.c"
   1:Src/STM32F4xx/stm32f4xx_it.c **** /**
   2:Src/STM32F4xx/stm32f4xx_it.c ****  ******************************************************************************
   3:Src/STM32F4xx/stm32f4xx_it.c ****  * @file    stm32f4xx_it.c
   4:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief   Interrupt Service Routines.
   5:Src/STM32F4xx/stm32f4xx_it.c ****  ******************************************************************************
   6:Src/STM32F4xx/stm32f4xx_it.c ****  * @attention
   7:Src/STM32F4xx/stm32f4xx_it.c ****  *
   8:Src/STM32F4xx/stm32f4xx_it.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
   9:Src/STM32F4xx/stm32f4xx_it.c ****  * All rights reserved.</center></h2>
  10:Src/STM32F4xx/stm32f4xx_it.c ****  *
  11:Src/STM32F4xx/stm32f4xx_it.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  12:Src/STM32F4xx/stm32f4xx_it.c ****  * the "License"; You may not use this file except in compliance with the
  13:Src/STM32F4xx/stm32f4xx_it.c ****  * License. You may obtain a copy of the License at:
  14:Src/STM32F4xx/stm32f4xx_it.c ****  *                        opensource.org/licenses/BSD-3-Clause
  15:Src/STM32F4xx/stm32f4xx_it.c ****  *
  16:Src/STM32F4xx/stm32f4xx_it.c ****  ******************************************************************************
  17:Src/STM32F4xx/stm32f4xx_it.c ****  */
  18:Src/STM32F4xx/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  19:Src/STM32F4xx/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  20:Src/STM32F4xx/stm32f4xx_it.c **** #include "main.h"
  21:Src/STM32F4xx/stm32f4xx_it.c **** 
  22:Src/STM32F4xx/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  23:Src/STM32F4xx/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  24:Src/STM32F4xx/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  25:Src/STM32F4xx/stm32f4xx_it.c **** 
  26:Src/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
  27:Src/STM32F4xx/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  28:Src/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
  29:Src/STM32F4xx/stm32f4xx_it.c **** /**
  30:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Non maskable interrupt.
ARM GAS  /tmp/cc9duLFA.s 			page 2


  31:Src/STM32F4xx/stm32f4xx_it.c ****  */
  32:Src/STM32F4xx/stm32f4xx_it.c **** void NMI_Handler(void)
  33:Src/STM32F4xx/stm32f4xx_it.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  35:Src/STM32F4xx/stm32f4xx_it.c **** 
  36:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  37:Src/STM32F4xx/stm32f4xx_it.c **** 
  38:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  39:Src/STM32F4xx/stm32f4xx_it.c **** 
  40:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  41:Src/STM32F4xx/stm32f4xx_it.c **** }
  34              		.loc 1 41 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE133:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB134:
  42:Src/STM32F4xx/stm32f4xx_it.c **** 
  43:Src/STM32F4xx/stm32f4xx_it.c **** /**
  44:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Hard fault interrupt.
  45:Src/STM32F4xx/stm32f4xx_it.c ****  */
  46:Src/STM32F4xx/stm32f4xx_it.c **** void HardFault_Handler(void)
  47:Src/STM32F4xx/stm32f4xx_it.c **** {
  49              		.loc 1 47 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  48:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  49:Src/STM32F4xx/stm32f4xx_it.c **** 
  50:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  51:Src/STM32F4xx/stm32f4xx_it.c ****   while (1U)
  56              		.loc 1 51 3 discriminator 1 view .LVU3
  52:Src/STM32F4xx/stm32f4xx_it.c ****   {
  53:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  54:Src/STM32F4xx/stm32f4xx_it.c **** 
  55:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  56:Src/STM32F4xx/stm32f4xx_it.c ****   }
  57              		.loc 1 56 3 discriminator 1 view .LVU4
  51:Src/STM32F4xx/stm32f4xx_it.c ****   {
  58              		.loc 1 51 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
ARM GAS  /tmp/cc9duLFA.s 			page 3


  61              	.LFE134:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB135:
  57:Src/STM32F4xx/stm32f4xx_it.c **** }
  58:Src/STM32F4xx/stm32f4xx_it.c **** 
  59:Src/STM32F4xx/stm32f4xx_it.c **** /**
  60:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Memory management fault.
  61:Src/STM32F4xx/stm32f4xx_it.c ****  */
  62:Src/STM32F4xx/stm32f4xx_it.c **** void MemManage_Handler(void)
  63:Src/STM32F4xx/stm32f4xx_it.c **** {
  73              		.loc 1 63 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
  64:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  65:Src/STM32F4xx/stm32f4xx_it.c **** 
  66:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  67:Src/STM32F4xx/stm32f4xx_it.c ****   while (1U)
  80              		.loc 1 67 3 discriminator 1 view .LVU7
  68:Src/STM32F4xx/stm32f4xx_it.c ****   {
  69:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  70:Src/STM32F4xx/stm32f4xx_it.c **** 
  71:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  72:Src/STM32F4xx/stm32f4xx_it.c ****   }
  81              		.loc 1 72 3 discriminator 1 view .LVU8
  67:Src/STM32F4xx/stm32f4xx_it.c ****   {
  82              		.loc 1 67 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE135:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB136:
  73:Src/STM32F4xx/stm32f4xx_it.c **** }
  74:Src/STM32F4xx/stm32f4xx_it.c **** 
  75:Src/STM32F4xx/stm32f4xx_it.c **** /**
  76:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
  77:Src/STM32F4xx/stm32f4xx_it.c ****  */
  78:Src/STM32F4xx/stm32f4xx_it.c **** void BusFault_Handler(void)
  79:Src/STM32F4xx/stm32f4xx_it.c **** {
  97              		.loc 1 79 1 view -0
ARM GAS  /tmp/cc9duLFA.s 			page 4


  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
  80:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
  81:Src/STM32F4xx/stm32f4xx_it.c **** 
  82:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
  83:Src/STM32F4xx/stm32f4xx_it.c ****   while (1U)
 104              		.loc 1 83 3 discriminator 1 view .LVU11
  84:Src/STM32F4xx/stm32f4xx_it.c ****   {
  85:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
  86:Src/STM32F4xx/stm32f4xx_it.c **** 
  87:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
  88:Src/STM32F4xx/stm32f4xx_it.c ****   }
 105              		.loc 1 88 3 discriminator 1 view .LVU12
  83:Src/STM32F4xx/stm32f4xx_it.c ****   {
 106              		.loc 1 83 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE136:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB137:
  89:Src/STM32F4xx/stm32f4xx_it.c **** }
  90:Src/STM32F4xx/stm32f4xx_it.c **** 
  91:Src/STM32F4xx/stm32f4xx_it.c **** /**
  92:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
  93:Src/STM32F4xx/stm32f4xx_it.c ****  */
  94:Src/STM32F4xx/stm32f4xx_it.c **** void UsageFault_Handler(void)
  95:Src/STM32F4xx/stm32f4xx_it.c **** {
 121              		.loc 1 95 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
  96:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
  97:Src/STM32F4xx/stm32f4xx_it.c **** 
  98:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
  99:Src/STM32F4xx/stm32f4xx_it.c ****   while (1U)
 128              		.loc 1 99 3 discriminator 1 view .LVU15
 100:Src/STM32F4xx/stm32f4xx_it.c ****   {
 101:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 102:Src/STM32F4xx/stm32f4xx_it.c **** 
 103:Src/STM32F4xx/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 104:Src/STM32F4xx/stm32f4xx_it.c ****   }
 129              		.loc 1 104 3 discriminator 1 view .LVU16
  99:Src/STM32F4xx/stm32f4xx_it.c ****   {
ARM GAS  /tmp/cc9duLFA.s 			page 5


 130              		.loc 1 99 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE137:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB138:
 105:Src/STM32F4xx/stm32f4xx_it.c **** }
 106:Src/STM32F4xx/stm32f4xx_it.c **** 
 107:Src/STM32F4xx/stm32f4xx_it.c **** /**
 108:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 109:Src/STM32F4xx/stm32f4xx_it.c ****  */
 110:Src/STM32F4xx/stm32f4xx_it.c **** void SVC_Handler(void)
 111:Src/STM32F4xx/stm32f4xx_it.c **** {
 145              		.loc 1 111 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 112:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 113:Src/STM32F4xx/stm32f4xx_it.c **** 
 114:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 115:Src/STM32F4xx/stm32f4xx_it.c **** 
 116:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 117:Src/STM32F4xx/stm32f4xx_it.c **** 
 118:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 119:Src/STM32F4xx/stm32f4xx_it.c **** }
 150              		.loc 1 119 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE138:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB139:
 120:Src/STM32F4xx/stm32f4xx_it.c **** 
 121:Src/STM32F4xx/stm32f4xx_it.c **** /**
 122:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Debug monitor.
 123:Src/STM32F4xx/stm32f4xx_it.c ****  */
 124:Src/STM32F4xx/stm32f4xx_it.c **** void DebugMon_Handler(void)
 125:Src/STM32F4xx/stm32f4xx_it.c **** {
 165              		.loc 1 125 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
ARM GAS  /tmp/cc9duLFA.s 			page 6


 126:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 127:Src/STM32F4xx/stm32f4xx_it.c **** 
 128:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 129:Src/STM32F4xx/stm32f4xx_it.c **** 
 130:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 131:Src/STM32F4xx/stm32f4xx_it.c **** 
 132:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 133:Src/STM32F4xx/stm32f4xx_it.c **** }
 170              		.loc 1 133 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE139:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB140:
 134:Src/STM32F4xx/stm32f4xx_it.c **** 
 135:Src/STM32F4xx/stm32f4xx_it.c **** /**
 136:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles Pendable request for system service.
 137:Src/STM32F4xx/stm32f4xx_it.c ****  */
 138:Src/STM32F4xx/stm32f4xx_it.c **** void PendSV_Handler(void)
 139:Src/STM32F4xx/stm32f4xx_it.c **** {
 185              		.loc 1 139 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 140:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 141:Src/STM32F4xx/stm32f4xx_it.c **** 
 142:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 143:Src/STM32F4xx/stm32f4xx_it.c **** 
 144:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 145:Src/STM32F4xx/stm32f4xx_it.c **** 
 146:Src/STM32F4xx/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 147:Src/STM32F4xx/stm32f4xx_it.c **** }
 190              		.loc 1 147 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE140:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB141:
 148:Src/STM32F4xx/stm32f4xx_it.c **** 
 149:Src/STM32F4xx/stm32f4xx_it.c **** /**
 150:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles System tick timer.
 151:Src/STM32F4xx/stm32f4xx_it.c ****  */
ARM GAS  /tmp/cc9duLFA.s 			page 7


 152:Src/STM32F4xx/stm32f4xx_it.c **** void SysTick_Handler(void) { HAL_IncTick(); }
 205              		.loc 1 152 28 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 214              		.loc 1 152 30 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 217              		.loc 1 152 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE141:
 222              		.section	.text.USART2_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	USART2_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	USART2_IRQHandler:
 231              	.LFB142:
 153:Src/STM32F4xx/stm32f4xx_it.c **** 
 154:Src/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
 155:Src/STM32F4xx/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 156:Src/STM32F4xx/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 157:Src/STM32F4xx/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 158:Src/STM32F4xx/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 159:Src/STM32F4xx/stm32f4xx_it.c **** /******************************************************************************/
 160:Src/STM32F4xx/stm32f4xx_it.c **** 
 161:Src/STM32F4xx/stm32f4xx_it.c **** /**
 162:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles USART2 global interrupt.
 163:Src/STM32F4xx/stm32f4xx_it.c ****  */
 164:Src/STM32F4xx/stm32f4xx_it.c **** void USART2_IRQHandler(void) { HAL_UART_IRQHandler(&huart2); }
 232              		.loc 1 164 30 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 241              		.loc 1 164 32 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 244              	.LVL1:
 245              		.loc 1 164 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	huart2
ARM GAS  /tmp/cc9duLFA.s 			page 8


 251              		.cfi_endproc
 252              	.LFE142:
 254              		.section	.text.USART3_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	USART3_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	USART3_IRQHandler:
 263              	.LFB143:
 165:Src/STM32F4xx/stm32f4xx_it.c **** 
 166:Src/STM32F4xx/stm32f4xx_it.c **** /**
 167:Src/STM32F4xx/stm32f4xx_it.c ****  * @brief This function handles USART3 global interrupt.
 168:Src/STM32F4xx/stm32f4xx_it.c ****  */
 169:Src/STM32F4xx/stm32f4xx_it.c **** void USART3_IRQHandler(void) { HAL_UART_IRQHandler(&huart3); }
 264              		.loc 1 169 30 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 273              		.loc 1 169 32 view .LVU31
 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 276              	.LVL2:
 277              		.loc 1 169 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
 282 000c 00000000 		.word	huart3
 283              		.cfi_endproc
 284              	.LFE143:
 286              		.comm	huart3,64,4
 287              		.comm	huart2,64,4
 288              		.text
 289              	.Letext0:
 290              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 291              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 292              		.file 4 "/usr/include/newlib/sys/_types.h"
 293              		.file 5 "/usr/include/newlib/sys/reent.h"
 294              		.file 6 "/usr/include/newlib/sys/lock.h"
 295              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 296              		.file 8 "/usr/include/newlib/ctype.h"
 297              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 298              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 299              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 300              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 301              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 302              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 303              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 304              		.file 16 "Inc/STM32F4xx_Inc/stm32f4xx_board_conf.h"
 305              		.file 17 "Inc/Wimod_Inc/serial_device.h"
ARM GAS  /tmp/cc9duLFA.s 			page 9


ARM GAS  /tmp/cc9duLFA.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc9duLFA.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc9duLFA.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc9duLFA.s:64     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:71     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc9duLFA.s:88     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:95     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc9duLFA.s:112    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc9duLFA.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:143    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc9duLFA.s:156    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:163    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc9duLFA.s:176    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc9duLFA.s:196    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc9duLFA.s:203    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc9duLFA.s:223    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/cc9duLFA.s:230    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/cc9duLFA.s:250    .text.USART2_IRQHandler:000000000000000c $d
                            *COM*:0000000000000040 huart2
     /tmp/cc9duLFA.s:255    .text.USART3_IRQHandler:0000000000000000 $t
     /tmp/cc9duLFA.s:262    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
     /tmp/cc9duLFA.s:282    .text.USART3_IRQHandler:000000000000000c $d
                            *COM*:0000000000000040 huart3

UNDEFINED SYMBOLS
HAL_IncTick
HAL_UART_IRQHandler
